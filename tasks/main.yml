---

- name: Are we running inside a docker container
  stat:
    path: /.dockerenv
  register: dockerenv

#    * kernel version
# Red Hat Enterprise Linux 7: 3.10.0-123.el7.x86_64 or later
- name: Get the current kernel release version
  shell: uname -r
  register: rhel_kernel

- name: Check if the RHEL kernel is 3.10.0-123.el7.x86_64 or later
  set_fact:
    kernel_pass: "{{ rhel_kernel.stdout | version_compare('3.10.0-123.el7.x86_64', operator='ge', strict=False) }}"
  failed_when: not kernel_pass

#    * memory
# Minimum of 8 GB of RAM for the installation of Oracle Grid Infrastructure
# Minimum of 1 GB of RAM for the installation of Oracle Database, however 2 GB of memory or
# more is recommended
# https://access.redhat.com/documentation/en-us/reference_architectures/2017/pdf/deploying_oracle_rac_database_12c_release_2_on_red_hat_enterprise_linux_7/Reference_Architectures-2017-Deploying_Oracle_RAC_Database_12c_Release_2_on_Red_Hat_Enterprise_Linux_7-en-US.pdf
- name: Get the total memory
  shell:  grep MemTotal /proc/meminfo | awk 'END { print $2 }'
  register: memory_total
  failed_when: ( memory_total / 1024 / 1024 ) < 1

#    * /tmp
#    * swap
#    * /u01
# Minimum local disk storage space for Oracle software
#  For Linux x86-64:
#  At least 8.6 GB for an Oracle Grid Infrastructure for a standalone server installation.
#  At least 7.5 GB for Oracle Database Enterprise Edition.

#    * system architecture
# uname -m
# x86_64

# df --block-size=1G /u01 | awk 'END { print $4 }'

# Disk space allocated to the /tmp directory
#
#  At least 1 GB of space in the /tmp directory.

# Swap space allocation relative to RAM (Oracle Database)
#
# Between 1 GB and 2 GB: 1.5 times the size of the RAM
# Between 2 GB and 16 GB: Equal to the size of the RAM
# More than 16 GB: 16 GB
# Note: If you enable HugePages for your Linux servers,
# then you should deduct the memory allocated to HugePages
# from the available RAM before calculating swap space.

# Swap space allocation relative to RAM (Oracle Restart)
#
# Between 8 GB and 16 GB: Equal to the size of the RAM
# More than 16 GB: 16 GB
# Note: If you enable HugePages for your Linux servers,
# then you should deduct the memory allocated to HugePages
# from the available RAM before calculating swap space.


- name: Set the hostname
  hostname:
    name: "{{ hostname }}.{{ domain }}"
  when: not dockerenv.stat.exists

- name: Add host to /etc/hosts if needed
  lineinfile:
    dest: /etc/hosts
    regexp: ".*{{ ansible_fqdn }}$"
    line: "{{ ansible_all_ipv4_addresses[0] }} {{ ansible_hostname }} {{ ansible_fqdn }}"
    state: present
  tags:
    - etchosts

#- name: update /etc/hosts

- name: Remove undesireable packages
  yum:
    name: "{{ item }}"
    state: absent
  with_items: "{{ remove_packages }}"

- name: Install packages required by Oracle on EL7
  yum:
    name: "{{ item }}"
    state: installed
  with_items: "{{ install_packages }}"

- name: Oracle-recommended PAM config
  lineinfile:
    path: /etc/pam.d/login
    state: present
    line: "session    required     pam_limits.so"
  tags:
    - pamconfig

- name: Oracle-recommended security limits
  template:
    src: 99-grid-oracle-limits.conf.j2
    dest: /etc/security/limits.d/99-grid-oracle-limits.conf
    backup: true
  tags:
    - seclimit

- name: Add the required oracle kernel changes to a file in /etc/sysctl.d
  template:
    src: 98-oracle-kernel.conf.j2
    dest: /etc/sysctl.d/98-oracle-kernel.conf
    mode: '0644'
  notify: Run oracle-kernel.conf


# set in 98-oracle-kernel.conf
#- name: Make some of the same settings in /etc/sysctl.conf
#  sysctl:
#    name: "{{ item.name }}"
#    value: "{{ item.value }}"
#    state: present
#    reload: true
#    ignoreerrors: true
#  with_items: "{{ oracle-kernel }}"


- name: User | Add group(s)
  group:
    name: "{{ item.group }}"
    gid: "{{ item.gid }}"
    state: present
  with_items: "{{ oracle_groups }}"
  tags:
   - group

- name: User | Add Oracle user
  user:
    name: "{{ item.username }}"
    group: "{{ item.primgroup }}"
    groups: "{{ item.othergroups }}"
    uid: "{{ item.uid }}"
    generate_ssh_key: true
    append: true
    state: present
    comment: "{{ item.comment }}"
  with_items: "{{oracle_users}}"
  tags:
    - user

- name: User | Add Grid user
  user:
    name: "{{ item.username }}"
    group: "{{ item.primgroup }}"
    groups: "{{ item.othergroups }}"
    uid: "{{ item.uid }}"
    generate_ssh_key: true
    append: true
    state: present
    comment: "{{ item.comment }}"
  when: role_separation
  with_items: "{{grid_users}}"
  tags:
    - user

- name: User | Add dba group to a sudoers file
  template:
    src: dba_sudoers.j2
    dest: /etc/sudoers.d/dba_sudoers
    owner: root
    mode: 0600

- name: Set the ulimit script in /etc/profile.d
  template:
    src: 99-oracle-grid.sh.j2
    dest: /etc/profile.d/99-oracle-grid.sh
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"

- name: Set the .aliases
  template:
    src: aliases.j2
    dest: "/home/{{ item }}/.aliases"
    owner: "{{ item }}"
    group: oinstall
    mode: "u=rw,g=r,o=r"
  with_items:
    - oracle
    - grid

- name: Set the .bashrc
  template:
    src: bashrc.j2
    dest: "/home/{{ item }}/.bashrc"
    owner: "{{ item }}"
    group: oinstall
    mode: "u=rw,g=r,o=r"
  with_items:
    - oracle
    - grid

- name: Set the .bash_profile
  template:
    src: bash_profile.j2
    dest: "/home/{{ item }}/.bash_profile"
    owner: "{{ item }}"
    group: oinstall
    mode: "u=rw,g=r,o=r"
  with_items:
    - oracle
    - grid

- name: Customize the tuned-profiles-oracle profile
  lineinfile:
    path: /usr/lib/tuned/oracle/tuned.conf
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items: "{{ tuned }}"

- name: Start and enable tuned service
  service:
    name: tuned
    enabled: yes
    state: started

#- name: Switch tuned profile to oracle
#  shell: tuned-adm profile oracle

# Docker doesn't have grub?
# Better to do in kickstart
# name: Disable Transparent Huge Pages in grub
# lineinfile:
#   path: /etc/default/grub
#   state: present
#   regexp: '(^\s*kernel(\s+(?!transparent_hugepage=never)[\w=/\-\.\,]+)*)\s*$'
#   line: '\1 transparent_hugepage=never'
#   backrefs: yes
# notify: Run update-grub